spring.application.name=StepByStep_BE

# Import .env file
spring.config.import=optional:file:.env[.properties]

# Default database configuration uses in-memory H2 for local development.
# Production environments can override these values through environment variables.
spring.datasource.url=${DB_URL:jdbc:h2:mem:stepbystep;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}

# JPA settings
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}

# SERVER PORT
server.port=${SERVER_PORT:5000}

## ?? ?? ?? (?? ? ?? ??)
#spring.security.user.name=dev
#spring.security.user.password=dev1234!
spring.security.user.roles=USER

# Mail settings
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS}

# Temporary password configuration
app.auth.temp-password-expiration-minutes=${TEMP_PASSWORD_EXPIRATION_MINUTES}
app.auth.temp-password-length=${TEMP_PASSWORD_LENGTH}
app.mail.from=${MAIL_FROM}
app.mail.temp-password-subject=${MAIL_TEMP_PASSWORD_SUBJECT}